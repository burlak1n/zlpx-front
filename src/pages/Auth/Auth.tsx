import type { FC } from "react";
import { useState } from "react";
import { telegramService } from "../../lib/telegram";
import { useTelegramAuth } from "../../hooks/useTelegramAuth";
import { useUser } from "../../lib/contexts/UserContext";

type PropsT = {
  onChangeTab: () => void;
};

export const AuthPage: FC<PropsT> = ({ onChangeTab }) => {
  const { authenticate } = useTelegramAuth();
  const { updateUserFromAuth } = useUser();
  const [status, setStatus] = useState<string>('–ì–æ—Ç–æ–≤ –∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
  
  const handleTestAuth = async () => {
    setStatus('–ù–∞—á–∏–Ω–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...');
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...');
    const result = await authenticate(telegramService.getInitData() || '');
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:', result);
    console.log('üìä result.success:', result.success);
    console.log('üìä result.userProfile:', result.userProfile);
    
    if (result.success) {
      setStatus('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
      console.log('‚úÖ –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É—Å–ø–µ—à–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      if (result.userProfile) {
        setStatus('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å...');
        telegramService.saveUserProfile(result.userProfile);
        localStorage.setItem('user_profile', JSON.stringify(result.userProfile));
        updateUserFromAuth(result.userProfile);
      }
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      setStatus('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é...');
      console.log('üîÑ –í—ã–∑—ã–≤–∞–µ–º onChangeTab...');
      
      // –î–æ–±–∞–≤–∏–º –∑–∞–¥–µ—Ä–∂–∫—É —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ç—É—Å
      setTimeout(() => {
        try {
          setStatus('üìû –í—ã–∑—ã–≤–∞–µ–º onChangeTab...');
          onChangeTab();
          setStatus('‚úÖ onChangeTab –≤—ã–∑–≤–∞–Ω');
          console.log('‚úÖ onChangeTab –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
          
          // –ü—Ä–æ–≤–µ—Ä–∏–º —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É, —Å–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          setTimeout(() => {
            setStatus('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
          }, 1000);
        } catch (error) {
          setStatus('‚ùå –û—à–∏–±–∫–∞: ' + String(error));
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ onChangeTab:', error);
        }
      }, 500);
    } else {
      setStatus('‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
      console.log('‚ùå –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª—Å—è');
    }
  };

  return (
    <div className="h-screen w-screen m-0 bg-zinc-100 dark:bg-zinc-900 flex flex-col justify-between">
      <div className="flex h-full items-center justify-center relative flex-col">
        <h1 className="text-6xl text-center font-extrabold text-x-purple m-0 p-0">
          –†–ò–ú
        </h1>
        <div className="mt-4 p-2 bg-white dark:bg-zinc-800 rounded text-center text-sm">
          {status}
        </div>
      </div>
      <div className="flex flex-col items-center w-screen px-3 pb-10 box-border gap-3">
        <a
          href="https://t.me/ingroupsts_org_bot/RIM"
          target="_blank"
          rel="noopener noreferrer"
          className="w-full text-white px-2 py-3 bg-x-purple rounded-md text-center block"
        >
          –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
        </a>
        <button
          onClick={handleTestAuth}
          className="w-full text-white px-2 py-3 bg-gray-600 rounded-md text-center block"
        >
          –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        </button>
      </div>
    </div>
  );
};
